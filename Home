"use client";
import { useState, useEffect } from "react";
import { FaMoon, FaSun } from "react-icons/fa";
import { useRouter } from "next/router";
import Link from "next/link";

export default function Fracto() {
  const [darkMode, setDarkMode] = useState(false);
  const [searchQuery, setSearchQuery] = useState("");
  const [location, setLocation] = useState("");
  const [products, setProducts] = useState([]);
  const [loading, setLoading] = useState(false);
  const router = useRouter();

  useEffect(() => {
    document.body.className = darkMode ? "bg-black text-white" : "bg-gray-50 text-black";
  }, [darkMode]);

  const handleSearch = async () => {
    setLoading(true);
    try {
      const response = await fetch(`/api/search?query=${searchQuery}&location=${location}`);
      const results = await response.json();
      setProducts(results);
    } catch (error) {
      console.error(error);
    }
    setLoading(false);
  };

  return (
    <div>
      <nav className="bg-white dark:bg-black shadow-lg px-6 py-3 flex justify-between items-center">
        <Link href="/" className="text-2xl font-bold text-[#2563eb]">Fracto, by Bennie</Link>
        <div className="flex items-center space-x-6">
          <Link href="/explore" className="text-gray-700 dark:text-gray-300">Explore</Link>
          <Link href="/categories" className="text-gray-700 dark:text-gray-300">Categories</Link>
          <Link href="/contact" className="text-gray-700 dark:text-gray-300">Contact</Link>
          <button onClick={() => setDarkMode(!darkMode)} className="text-xl p-2">
            {darkMode ? <FaSun className="text-yellow-500" /> : <FaMoon className="text-gray-600" />}
          </button>
        </div>
      </nav>

      <main className="max-w-7xl mx-auto px-4 py-8">
        <div className="flex flex-col items-center mb-8">
          <h1 className="text-4xl font-bold mb-4">Find Anything, Anywhere</h1>
          <p className="text-gray-600 dark:text-gray-300 mb-8">AI-powered shopping for a seamless experience</p>
          <div className="w-full max-w-2xl flex flex-col md:flex-row gap-4">
            <input type="text" placeholder="What are you looking for?" className="w-full px-4 py-3 rounded-lg border" value={searchQuery} onChange={(e) => setSearchQuery(e.target.value)} />
            <input type="text" placeholder="Location" className="w-full px-4 py-3 rounded-lg border" value={location} onChange={(e) => setLocation(e.target.value)} />
            <button onClick={handleSearch} className="px-8 py-3 bg-blue-600 text-white rounded-lg">Search</button>
          </div>
        </div>
        <section>
          {loading ? (
            <p>Loading...</p>
          ) : (
            <div className="grid grid-cols-2 md:grid-cols-4 gap-6">
              {products.map((product, index) => (
                <div key={index} className="border rounded-lg p-4">
                  <img src={product.image} alt={product.name} className="w-full h-32 object-cover" />
                  <h3 className="text-lg font-semibold mt-2">{product.name}</h3>
                  <p className="text-gray-500">${product.price}</p>
                </div>
              ))}
            </div>
          )}
        </section>
      </main>
    </div>
  );
}
